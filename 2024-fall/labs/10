

<!DOCTYPE html>

<html lang="en-US">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=Edge">

  

  <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">

  <link rel="stylesheet" href="/assets/css/just-the-docs-default.css">

  

  
    <script type="text/javascript" src="/assets/js/vendor/lunr.min.js"></script>
  
  <script type="text/javascript" src="/assets/js/just-the-docs.js"></script>

  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!-- Begin Jekyll SEO tag v2.8.0 -->
<title>Lab 10 - Puppet | Sysadmin DeCal</title>
<meta name="generator" content="Jekyll v3.9.3" />
<meta property="og:title" content="Lab 10 - Puppet" />
<meta name="author" content="Nikhil Jha, Ben Cuan" />
<meta property="og:locale" content="en_US" />
<meta name="description" content="A course covering the basics of setting up and administering a production-quality Linux server environment." />
<meta property="og:description" content="A course covering the basics of setting up and administering a production-quality Linux server environment." />
<link rel="canonical" href="https://decal.ocf.berkeley.edu/labs/10/" />
<meta property="og:url" content="https://decal.ocf.berkeley.edu/labs/10/" />
<meta property="og:site_name" content="Sysadmin DeCal" />
<meta property="og:type" content="website" />
<meta name="twitter:card" content="summary" />
<meta property="twitter:title" content="Lab 10 - Puppet" />
<script type="application/ld+json">
{"@context":"https://schema.org","@type":"WebPage","author":{"@type":"Person","name":"Nikhil Jha, Ben Cuan"},"description":"A course covering the basics of setting up and administering a production-quality Linux server environment.","headline":"Lab 10 - Puppet","url":"https://decal.ocf.berkeley.edu/labs/10/"}</script>
<!-- End Jekyll SEO tag -->


  

</head>

<span style="display: none">
  
@import "./support/support";
@import "./color_schemes/";
@import "./modules";
@import "./custom/custom";


</span>
<body>
  <div id="loading" style="height:140%;width:140%;background-color:#ffffff;position:absolute;z-index:1000;left:-20%;top:-20%"></div>
  <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
    <symbol id="svg-link" viewBox="0 0 24 24">
      <title>Link</title>
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-link">
        <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path><path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
      </svg>
    </symbol>
  </svg>
  <div class="side-bar lab-side-bar">
    <div class="site-header">
      <a href="/" class="site-title lh-tight">
        Sysadmin DeCal
      </a>
      <a href="#" id="menu-button" class="site-button">
        <svg viewBox="0 0 24 24" class="icon"><use xlink:href="#svg-menu"></use></svg>
      </a>
    </div>
    <nav role="navigation" aria-label="Main" id="site-nav" class="site-nav">      
      <button type="button" name="theme-toggle" class="btn theme-btn" onclick="toggleDark()">Toggle Dark Theme</button>
      <ol><li><a href="#overview">Overview</a><ol><li><a href="#getting-help">Getting help</a></li><li><a href="#the-most-important-trick-with-puppet">The most important trick with puppet</a></li></ol></li><li><a href="#part-1-installing-puppet">Part 1: Installing Puppet</a></li><li><a href="#part-2-using-puppet">Part 2: Using Puppet</a><ol><li><a href="#part-a-making-a-home-directory-and-a-user">Part a: Making a Home Directory and a User</a><ol><li><a href="#checking-part-a">Checking Part a</a></li></ol></li><li><a href="#part-b-install-java">Part b: Install java</a><ol><li><a href="#checking-part-2b">Checking Part 2b</a></li></ol></li><li><a href="#part-c-installing-the-minecraft-server-configuration">Part c: Installing the Minecraft Server configuration</a><ol><li><a href="#checking-part-c">Checking Part c</a></li></ol></li><li><a href="#part-d-installing-the-minecraft-server">Part d: Installing the Minecraft Server</a><ol><li><a href="#checking-part-d">Checking Part d</a></li></ol></li><li><a href="#part-e-templating-a-systemd-unit-file">Part e: Templating a systemd unit file</a><ol><li><a href="#checking-part-e">Checking Part e</a></li></ol></li><li><a href="#part-f-running-the-service">Part f: Running the service</a><ol><li><a href="#checking-part-f">Checking Part f</a></li></ol></li><li><a href="#part-g-backups">Part g: Backups</a><ol><li><a href="#checking-part-g">Checking Part g</a></li></ol></li><li><a href="#part-h-bonus-optional-if-you-want-minecraft-to-not-out-of-memory">Part h: (Bonus, optional if you want Minecraft to not Out Of Memory)</a><ol><li><a href="#checking-part-h">Checking Part h</a></li></ol></li><li><a href="#part-i-bonus-running-minecraft">Part i: (Bonus, running Minecraft)</a></li></ol></li><li><a href="#part-3-cleanup">Part 3: Cleanup</a></li><li><a href="#part-4-submission">Part 4: Submission</a></li></ol>

    </nav>
    </div>
  </div>
  <div id="main" class="main">
    <div id="main-content-wrap" class="main-content-wrap">
      
        
      
      <div id="main-content" class="main-content" role="main">
        <h1 style="margin-bottom:0">Lab 10 - Puppet</h1>
        
        <p>Facilitator: <a href="/staff#jaysa">jaysa</a></p>
        
        
        10 min read
        
          <h2 class="no_toc text-delta" id="table-of-contents">
        
        
          <a href="#table-of-contents" class="anchor-heading"><svg viewBox="0 0 16 16" aria-hidden="true"><use xlink:href="#svg-link"></use></svg></a> Table of contents
        
        
      </h2>
    

<ol id="markdown-toc">
  <li><a href="#overview" id="markdown-toc-overview">Overview</a>    <ol>
      <li><a href="#getting-help" id="markdown-toc-getting-help">Getting help</a></li>
      <li><a href="#the-most-important-trick-with-puppet" id="markdown-toc-the-most-important-trick-with-puppet">The most important trick with puppet</a></li>
    </ol>
  </li>
  <li><a href="#part-1-installing-puppet" id="markdown-toc-part-1-installing-puppet">Part 1: Installing Puppet</a></li>
  <li><a href="#part-2-using-puppet" id="markdown-toc-part-2-using-puppet">Part 2: Using Puppet</a>    <ol>
      <li><a href="#part-a-making-a-home-directory-and-a-user" id="markdown-toc-part-a-making-a-home-directory-and-a-user">Part a: Making a Home Directory and a User</a>        <ol>
          <li><a href="#checking-part-a" id="markdown-toc-checking-part-a">Checking Part a</a></li>
        </ol>
      </li>
      <li><a href="#part-b-install-java" id="markdown-toc-part-b-install-java">Part b: Install java</a>        <ol>
          <li><a href="#checking-part-2b" id="markdown-toc-checking-part-2b">Checking Part 2b</a></li>
        </ol>
      </li>
      <li><a href="#part-c-installing-the-minecraft-server-configuration" id="markdown-toc-part-c-installing-the-minecraft-server-configuration">Part c: Installing the Minecraft Server configuration</a>        <ol>
          <li><a href="#checking-part-c" id="markdown-toc-checking-part-c">Checking Part c</a></li>
        </ol>
      </li>
      <li><a href="#part-d-installing-the-minecraft-server" id="markdown-toc-part-d-installing-the-minecraft-server">Part d: Installing the Minecraft Server</a>        <ol>
          <li><a href="#checking-part-d" id="markdown-toc-checking-part-d">Checking Part d</a></li>
        </ol>
      </li>
      <li><a href="#part-e-templating-a-systemd-unit-file" id="markdown-toc-part-e-templating-a-systemd-unit-file">Part e: Templating a systemd unit file</a>        <ol>
          <li><a href="#checking-part-e" id="markdown-toc-checking-part-e">Checking Part e</a></li>
        </ol>
      </li>
      <li><a href="#part-f-running-the-service" id="markdown-toc-part-f-running-the-service">Part f: Running the service</a>        <ol>
          <li><a href="#checking-part-f" id="markdown-toc-checking-part-f">Checking Part f</a></li>
        </ol>
      </li>
      <li><a href="#part-g-backups" id="markdown-toc-part-g-backups">Part g: Backups</a>        <ol>
          <li><a href="#checking-part-g" id="markdown-toc-checking-part-g">Checking Part g</a></li>
        </ol>
      </li>
      <li><a href="#part-h-bonus-optional-if-you-want-minecraft-to-not-out-of-memory" id="markdown-toc-part-h-bonus-optional-if-you-want-minecraft-to-not-out-of-memory">Part h: (Bonus, optional if you want Minecraft to not Out Of Memory)</a>        <ol>
          <li><a href="#checking-part-h" id="markdown-toc-checking-part-h">Checking Part h</a></li>
        </ol>
      </li>
      <li><a href="#part-i-bonus-running-minecraft" id="markdown-toc-part-i-bonus-running-minecraft">Part i: (Bonus, running Minecraft)</a></li>
    </ol>
  </li>
  <li><a href="#part-3-cleanup" id="markdown-toc-part-3-cleanup">Part 3: Cleanup</a></li>
  <li><a href="#part-4-submission" id="markdown-toc-part-4-submission">Part 4: Submission</a></li>
</ol><hr />
      <h1 id="overview">
        
        
          <a href="#overview" class="anchor-heading"><svg viewBox="0 0 16 16" aria-hidden="true"><use xlink:href="#svg-link"></use></svg></a> Overview
        
        
      </h1>
    

<p>For this lab, we will be installing and configuring a Minecraft server. All of
this configuration can be successfully done without a Minecraft client or knowledge
on how to play the game itself.</p>

<p><strong>If you want to actually be able to connect to the server:</strong> If you’re not using the provided VM make sure your Linux VM has enough RAM to host the server (2-4Gb).</p>
      <h2 id="getting-help">
        
        
          <a href="#getting-help" class="anchor-heading"><svg viewBox="0 0 16 16" aria-hidden="true"><use xlink:href="#svg-link"></use></svg></a> Getting help
        
        
      </h2>
    
<p>If you want any help with any part of this lab, join the OCF
Discord (<a href="https://ocf.io/discord">https://ocf.io/discord</a>) and ask in the #decal-general channel!</p>

<p>The original creator of this lab is Frank Dai (fydai), and there was originally
a message here telling you to ping him if you needed any help. You are still 
welcome to try (or, you can also ping current decal facilitators as well) :)</p>
      <h2 id="the-most-important-trick-with-puppet">
        
        
          <a href="#the-most-important-trick-with-puppet" class="anchor-heading"><svg viewBox="0 0 16 16" aria-hidden="true"><use xlink:href="#svg-link"></use></svg></a> The most important trick with puppet
        
        
      </h2>
    

<p>If you mess anything up, delete everything (in particular <code class="language-plaintext highlighter-rouge">/home/minecraft</code>),
and just run puppet again! Puppet ensures that even starting from nothing, you
can reconstruct your entire previous state. If you do this and get issues with
Puppet executing things out of order than you would like them, add in a
<code class="language-plaintext highlighter-rouge">require</code> parameter to the resource that should be defined later.  For instance,
if you want to create something after the <code class="language-plaintext highlighter-rouge">/home/minecraft</code> directory, throw in
an <code class="language-plaintext highlighter-rouge">require =&gt; File['/home/minecraft']</code> option. In general, capitalize the name
of the resource, and put the string before the colon between the square braces.</p>
      <h1 id="part-1-installing-puppet">
        
        
          <a href="#part-1-installing-puppet" class="anchor-heading"><svg viewBox="0 0 16 16" aria-hidden="true"><use xlink:href="#svg-link"></use></svg></a> Part 1: Installing Puppet
        
        
      </h1>
    

<p>First, we’re going to install Puppet.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt install puppet
 
</code></pre></div></div>

<p>If you installed puppet with an earlier version of the lab and it isn’t working, please use the command below and then install puppet with apt.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo dpkg -i --force-overwrite /var/cache/apt/archives/puppet_5.5.22-4ubuntu0.2_all.deb
</code></pre></div></div>
      <h1 id="part-2-using-puppet">
        
        
          <a href="#part-2-using-puppet" class="anchor-heading"><svg viewBox="0 0 16 16" aria-hidden="true"><use xlink:href="#svg-link"></use></svg></a> Part 2: Using Puppet
        
        
      </h1>
    

<p>Make a <code class="language-plaintext highlighter-rouge">minecraft.pp</code> file anywhere, which through the course of this lab, will
eventually configure and run a Minecraft Server. To run your puppet code, use
sudo <code class="language-plaintext highlighter-rouge">puppet apply minecraft.pp</code>. Puppet, being declarative, will do nothing if
the system is already configured properly, so <strong>run puppet early and often</strong> to
detect bugs as soon as possible.</p>

<p>Useful references are this section are the
<a href="https://puppet.com/docs/puppet/7/puppet_index.html">Puppet documentation</a>
and there is a lot of sample code avaliable in the
<a href="https://github.com/ocf/puppet">OCF Puppet configuration</a>. When you are stuck,
looking at existing code and see how they did things will generally be helpful.
Also remember that there are code examples on the <a href="https://docs.google.com/presentation/d/1cKYJh0hAFjGkcFURlHS8U8xoyakSI-LBrq6-WnyrgZI/edit?usp=sharing">slides</a>!</p>
      <h2 id="part-a-making-a-home-directory-and-a-user">
        
        
          <a href="#part-a-making-a-home-directory-and-a-user" class="anchor-heading"><svg viewBox="0 0 16 16" aria-hidden="true"><use xlink:href="#svg-link"></use></svg></a> Part a: Making a Home Directory and a User
        
        
      </h2>
    

<p>Put the following code into <code class="language-plaintext highlighter-rouge">minecraft.pp</code>:</p>

<div class="language-puppet highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">file</span> <span class="p">{</span> <span class="s1">'/home/minecraft'</span><span class="p">:</span>
  <span class="py">ensure</span> <span class="p">=&gt;</span> <span class="s1">'directory'</span><span class="p">,</span>
<span class="p">}</span>
</code></pre></div></div>
<p>Run <code class="language-plaintext highlighter-rouge">sudo puppet apply minecraft.pp</code> to apply it, and ensure that the
<code class="language-plaintext highlighter-rouge">/home/minecraft</code> directory was created.</p>

<p>Inside <code class="language-plaintext highlighter-rouge">minecraft.pp</code>, write some Puppet code to create a user named
<code class="language-plaintext highlighter-rouge">minecraft</code>, that the Minecraft server will run under.  The <code class="language-plaintext highlighter-rouge">minecraft</code> user
should have home directory <code class="language-plaintext highlighter-rouge">/home/minecraft</code>.  Now modify the code creating
<code class="language-plaintext highlighter-rouge">/home/minecraft</code> to set owner the owner to <code class="language-plaintext highlighter-rouge">minecraft</code> user you just made.
Check the example code on the <a href="https://docs.google.com/presentation/d/1cKYJh0hAFjGkcFURlHS8U8xoyakSI-LBrq6-WnyrgZI/edit?usp=sharing">slides</a> if you are unsure about how to do this.</p>
      <h3 id="checking-part-a">
        
        
          <a href="#checking-part-a" class="anchor-heading"><svg viewBox="0 0 16 16" aria-hidden="true"><use xlink:href="#svg-link"></use></svg></a> Checking Part a
        
        
      </h3>
    

<p>Run <code class="language-plaintext highlighter-rouge">sudo puppet apply minecraft.pp</code>.</p>

<p>Now run <code class="language-plaintext highlighter-rouge">ls -l /home</code> and verify that <code class="language-plaintext highlighter-rouge">/home/minecraft</code> is owned by the
minecraft user.</p>
      <h2 id="part-b-install-java">
        
        
          <a href="#part-b-install-java" class="anchor-heading"><svg viewBox="0 0 16 16" aria-hidden="true"><use xlink:href="#svg-link"></use></svg></a> Part b: Install java
        
        
      </h2>
    

<p>Add a few lines to <code class="language-plaintext highlighter-rouge">minecraft.pp</code> to install the <code class="language-plaintext highlighter-rouge">default-jre</code> package.</p>
      <h3 id="checking-part-2b">
        
        
          <a href="#checking-part-2b" class="anchor-heading"><svg viewBox="0 0 16 16" aria-hidden="true"><use xlink:href="#svg-link"></use></svg></a> Checking Part 2b
        
        
      </h3>
    

<p>Run <code class="language-plaintext highlighter-rouge">java</code> and verify that the binary exists.</p>
      <h2 id="part-c-installing-the-minecraft-server-configuration">
        
        
          <a href="#part-c-installing-the-minecraft-server-configuration" class="anchor-heading"><svg viewBox="0 0 16 16" aria-hidden="true"><use xlink:href="#svg-link"></use></svg></a> Part c: Installing the Minecraft Server configuration
        
        
      </h2>
    

<p>Copy paste the contents of
<a href="https://raw.githubusercontent.com/0xcf/decal-labs/master/a10/server.properties">https://raw.githubusercontent.com/0xcf/decal-labs/master/a10/server.properties</a>
locally into a file named <code class="language-plaintext highlighter-rouge">server.properties</code></p>

<p>Ensure that <code class="language-plaintext highlighter-rouge">/home/minecraft/server.properties</code> contains the contents of the
<code class="language-plaintext highlighter-rouge">server.properties</code> you just saved.</p>

<p>Hint: Use the <code class="language-plaintext highlighter-rouge">file</code> function! Also note that in this lab, you should be using
<strong>absolute</strong> file paths.</p>

<p>Read and agree to the
<a href="https://account.mojang.com/documents/minecraft_eula">Minecraft EULA</a>, and
ensure that <code class="language-plaintext highlighter-rouge">/home/minecraft/eula.txt</code> contains the text <code class="language-plaintext highlighter-rouge">eula=true</code> by
hardcoding the string <code class="language-plaintext highlighter-rouge">eula=true</code> into your <code class="language-plaintext highlighter-rouge">minecraft.pp</code>.</p>

<p>Make sure that all of the above files are owned by the <code class="language-plaintext highlighter-rouge">minecraft</code> user.</p>
      <h3 id="checking-part-c">
        
        
          <a href="#checking-part-c" class="anchor-heading"><svg viewBox="0 0 16 16" aria-hidden="true"><use xlink:href="#svg-link"></use></svg></a> Checking Part c
        
        
      </h3>
    
<p>Run <code class="language-plaintext highlighter-rouge">ls -l /home/minecraft</code> and ensure that the above files exist, contain what
they’re supposed to, and they are all owned by the <code class="language-plaintext highlighter-rouge">minecraft</code> user, not yours.</p>
      <h2 id="part-d-installing-the-minecraft-server">
        
        
          <a href="#part-d-installing-the-minecraft-server" class="anchor-heading"><svg viewBox="0 0 16 16" aria-hidden="true"><use xlink:href="#svg-link"></use></svg></a> Part d: Installing the Minecraft Server
        
        
      </h2>
    

<p>Ensure that /home/minecraft/server.jar contains the Minecraft Server, available
at
<a href="https://piston-data.mojang.com/v1/objects/1b557e7b033b583cd9f66746b7a9ab1ec1673ced/server.jar">https://piston-data.mojang.com/v1/objects/1b557e7b033b583cd9f66746b7a9ab1ec1673ced/server.jar</a>. This server jar is for Minecraft 1.16.5, if you’d like to run a different version you can download the jar from within the Minecraft launcher or from the Minecraft wiki.</p>

<p>Note that the <code class="language-plaintext highlighter-rouge">source</code> parameter of the <code class="language-plaintext highlighter-rouge">file</code> resource accepts a URL as its
argument. Also make it owned by the <code class="language-plaintext highlighter-rouge">minecraft</code> user.</p>
      <h3 id="checking-part-d">
        
        
          <a href="#checking-part-d" class="anchor-heading"><svg viewBox="0 0 16 16" aria-hidden="true"><use xlink:href="#svg-link"></use></svg></a> Checking Part d
        
        
      </h3>
    

<p>You know what to do!</p>
      <h2 id="part-e-templating-a-systemd-unit-file">
        
        
          <a href="#part-e-templating-a-systemd-unit-file" class="anchor-heading"><svg viewBox="0 0 16 16" aria-hidden="true"><use xlink:href="#svg-link"></use></svg></a> Part e: Templating a systemd unit file
        
        
      </h2>
    

<p>Copy the following template into the same directory into your <code class="language-plaintext highlighter-rouge">minecraft.pp</code>
file as <code class="language-plaintext highlighter-rouge">minecraft.service.erb</code>.</p>

<p>Edit the file to be a proper <code class="language-plaintext highlighter-rouge">erb</code> template, so that <code class="language-plaintext highlighter-rouge">&lt;INSERT YOUR RAM AMOUNT
HERE&gt;</code> becomes the value of the <code class="language-plaintext highlighter-rouge">memory_available</code> variable when puppet runs.
You want to use the templated variable <code class="language-plaintext highlighter-rouge">@memory_available</code> in the <code class="language-plaintext highlighter-rouge">.erb</code> file,
and declare the variable <code class="language-plaintext highlighter-rouge">$memory_available</code> it in the <code class="language-plaintext highlighter-rouge">.pp</code> file.</p>

<p>Hint: In the <a href="https://docs.google.com/presentation/d/1cKYJh0hAFjGkcFURlHS8U8xoyakSI-LBrq6-WnyrgZI/edit?usp=sharing">slides</a>), there is an example of templating a file.</p>

<p>Hint 2: A .erb (Embedded Ruby) file means that <a href="https://puppet.com/docs/puppet/7/lang_template_erb.html">Ruby</a> is used as the templating language instead of the puppet language. 
Make sure not to confuse the syntax between the two!</p>

<p>Now edit your <code class="language-plaintext highlighter-rouge">minecraft.pp</code> file, so that it sets the <code class="language-plaintext highlighter-rouge">$memory_available</code>
variable to be the <strong>half</strong> the total amount of RAM available to the system (use
Google and StackOverflow), and that it puts the templated file into
<code class="language-plaintext highlighter-rouge">/etc/systemd/system/minecraft.service</code>.</p>

<p>Hint: You need to figure out how to define variables and set variables in
puppet.  Note that variables should be prefixed by <code class="language-plaintext highlighter-rouge">$</code>. You can assign variables
just like any other language. Don’t forget to look at the sample code on the
<a href="https://docs.google.com/presentation/d/1cKYJh0hAFjGkcFURlHS8U8xoyakSI-LBrq6-WnyrgZI/edit?usp=sharing">slides</a> (it doesn’t cover variable assignment however) and don’t forget to use
<strong>absolute paths</strong>!</p>

<p>Note that the systemd unit file does not have a proper ExecStop, which maybe
result in some world corruption.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[Unit]
Description=Minecraft Server

Wants=network.target
After=network.target

[Service]
User=minecraft
WorkingDirectory=/home/minecraft
# This should look like ExecStart=/usr/bin/java -Xmx504578 -jar server.jar
ExecStart=/usr/bin/java -Xmx&lt;INSERT YOUR RAM AMOUNT HERE&gt; -jar server.jar
ExecStop=/bin/kill -- $MAINPID TimeoutStopSec=5

[Install]
WantedBy=multi-user.target
</code></pre></div></div>
      <h3 id="checking-part-e">
        
        
          <a href="#checking-part-e" class="anchor-heading"><svg viewBox="0 0 16 16" aria-hidden="true"><use xlink:href="#svg-link"></use></svg></a> Checking Part e
        
        
      </h3>
    
<p>Look at <code class="language-plaintext highlighter-rouge">/etc/systemd/system/minecraft.service</code> to ensure it contains the
contents you want before proceeding.</p>
      <h2 id="part-f-running-the-service">
        
        
          <a href="#part-f-running-the-service" class="anchor-heading"><svg viewBox="0 0 16 16" aria-hidden="true"><use xlink:href="#svg-link"></use></svg></a> Part f: Running the service
        
        
      </h2>
    

<p>Ensure that the <code class="language-plaintext highlighter-rouge">minecraft</code> systemd service is enabled and started.</p>
      <h3 id="checking-part-f">
        
        
          <a href="#checking-part-f" class="anchor-heading"><svg viewBox="0 0 16 16" aria-hidden="true"><use xlink:href="#svg-link"></use></svg></a> Checking Part f
        
        
      </h3>
    

<p>This is the critical moment! If you’ve done everything before correctly, this
should work (until Minecraft OOMs)!  If the systemd unit fails immediately, try
to run the ExecStart command manually, by going into <code class="language-plaintext highlighter-rouge">/home/minecraft/</code> and
running <code class="language-plaintext highlighter-rouge">sudo -u minecraft java -Xmx1009156 -jar server.jar</code>.</p>

<p>You can verify that something is trying to start by running <code class="language-plaintext highlighter-rouge">tail -f
/home/minecraft/logs/latest.log</code>. If it ever stops loading, the server has run
out of memory, and “Part h” below should have a workaround.</p>
      <h2 id="part-g-backups">
        
        
          <a href="#part-g-backups" class="anchor-heading"><svg viewBox="0 0 16 16" aria-hidden="true"><use xlink:href="#svg-link"></use></svg></a> Part g: Backups
        
        
      </h2>
    

<p>We should backup our minecraft server!</p>

<p>Ensure there is a directory <code class="language-plaintext highlighter-rouge">/home/minecraft/backups/</code>, owned by the <code class="language-plaintext highlighter-rouge">minecraft</code>
user.</p>

<p>Ensure there is a script, <code class="language-plaintext highlighter-rouge">/home/minecraft/backup.sh</code> that is executable, with
the following contents however you’d like.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/sh</span>
<span class="nb">cp</span> <span class="nt">-r</span> /home/minecraft/world <span class="s2">"/home/minecraft/backups/world-</span><span class="si">$(</span><span class="nb">date</span> <span class="nt">-Is</span><span class="si">)</span><span class="s2">"</span>
</code></pre></div></div>

<p>The command copies the directory containing into the minecraft world into a
subdirectory of <code class="language-plaintext highlighter-rouge">backups</code> indexed by the current date.</p>

<p>Use puppet to add a cron entry to execute <code class="language-plaintext highlighter-rouge">/home/minecraft/backup.sh</code> every
minute as the minecraft user.</p>
      <h3 id="checking-part-g">
        
        
          <a href="#checking-part-g" class="anchor-heading"><svg viewBox="0 0 16 16" aria-hidden="true"><use xlink:href="#svg-link"></use></svg></a> Checking Part g
        
        
      </h3>
    

<p>Look in the <code class="language-plaintext highlighter-rouge">/home/minecraft/backups</code> contains backups!</p>
      <h2 id="part-h-bonus-optional-if-you-want-minecraft-to-not-out-of-memory">
        
        
          <a href="#part-h-bonus-optional-if-you-want-minecraft-to-not-out-of-memory" class="anchor-heading"><svg viewBox="0 0 16 16" aria-hidden="true"><use xlink:href="#svg-link"></use></svg></a> Part h: (Bonus, optional if you want Minecraft to not Out Of Memory)
        
        
      </h2>
    

<p>We could be doing this by typing this a bunch of commands to add a swap file,
and enabling it as swap, but we will do this puppet style!</p>

<p>Configure puppet to create a 4GB file <code class="language-plaintext highlighter-rouge">/swapfile</code> with the command <code class="language-plaintext highlighter-rouge">dd
if=/dev/zero of=/swapfile bs=2M count=2048</code>.  Look through the flags to the
<code class="language-plaintext highlighter-rouge">exec</code> resource to see how you can do this.</p>

<p>Now configure Puppet to run <code class="language-plaintext highlighter-rouge">mkswap /swapfile &amp;&amp; swapon /swapfile</code> unless swap
is currently active, which you can check by seeing if <code class="language-plaintext highlighter-rouge">swapon -s | grep
/swapfile</code> returns a zero code. There are two arguments that can do this,
<code class="language-plaintext highlighter-rouge">unless</code> or <code class="language-plaintext highlighter-rouge">onlyif</code>. Experiment to see which one works.</p>
      <h3 id="checking-part-h">
        
        
          <a href="#checking-part-h" class="anchor-heading"><svg viewBox="0 0 16 16" aria-hidden="true"><use xlink:href="#svg-link"></use></svg></a> Checking Part h
        
        
      </h3>
    
<p>Run <code class="language-plaintext highlighter-rouge">swapon -s</code>, and check that <code class="language-plaintext highlighter-rouge">/swapfile</code> is listed. Ensure that there is no
extranous output when you run puppet, if your checks are correctly done, this
shouldn’t happen. Check <code class="language-plaintext highlighter-rouge">/home/minecraft/logs/latest.log</code> to make sure that the
server has start up properly. If it has, then congratulations!</p>
      <h2 id="part-i-bonus-running-minecraft">
        
        
          <a href="#part-i-bonus-running-minecraft" class="anchor-heading"><svg viewBox="0 0 16 16" aria-hidden="true"><use xlink:href="#svg-link"></use></svg></a> Part i: (Bonus, running Minecraft)
        
        
      </h2>
    

<p>Due to security issues, the Minecraft server running is only listening to
<code class="language-plaintext highlighter-rouge">127.0.0.1</code>, which means by default you can only access a Minecraft client
running on the VM. You have two ways to get around this. One is changing
<code class="language-plaintext highlighter-rouge">server-ip</code> in server.properties to a blank string (i.e. <code class="language-plaintext highlighter-rouge">server-ip=</code>), which will allow access by
anybody. If you do this you probably want to set up a whitelist. The other
option is SSH port forwarding. The command, if run on your machine, captures
traffic at port 25565 on your local computer, and forwards them to port 25565 on
your VM. The command will run forever, just leave it in the background while you
try to connect.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh -NL 25565:localhost:25565 &lt;username&gt;@&lt;username&gt;.decal.ocfhosted.com
</code></pre></div></div>

<p>If you chose the first option, you can connect by typing your domain name (e.g. <username>.decal.ocfhosted.com) or IP
into minecraft, if you chose the second, you can connect to `localhost`.</username></p>
      <h1 id="part-3-cleanup">
        
        
          <a href="#part-3-cleanup" class="anchor-heading"><svg viewBox="0 0 16 16" aria-hidden="true"><use xlink:href="#svg-link"></use></svg></a> Part 3: Cleanup
        
        
      </h1>
    

<p>There is currently a cronjob copying the minecraft world every minute. That
might run you out of disk space. To disable that, you should run <code class="language-plaintext highlighter-rouge">sudo crontab
-e</code> and remove the line for the backups.</p>

<p>Trying to run a Minecraft Server constantly might also eat up some system
resources. You can stop and disable the minecraft systmemd unit manually if it
is causing issues.</p>

<p>If you added the swapfile, you might want to remove that.</p>

<p>Another way you can clean up is with puppet. By default, puppet doesn’t remove
files it doesn’t know about. However, you can use <code class="language-plaintext highlighter-rouge">ensure =&gt; absent</code> to make
sure files are gone, and similarly for the other resource types.</p>
      <h1 id="part-4-submission">
        
        
          <a href="#part-4-submission" class="anchor-heading"><svg viewBox="0 0 16 16" aria-hidden="true"><use xlink:href="#svg-link"></use></svg></a> Part 4: Submission
        
        
      </h1>
    

<p>Congratulations on finishing the lab!</p>

<p>To submit, copy paste the code you have for each section into the gradescope
submission.</p>

        
        <hr>
        <footer>
  <div class="col-lg-12 text-center">
    <p>
      <a href="https://www.janestreet.com" class="no-underline">
        <img
          src="/assets/images/jane-street.svg"
          style="height: 50px"
        />
      </a>
      <span>
        Thanks to
        <a href="https://www.janestreet.com">Jane Street</a> for supporting the DeCal.
      </span>
    </p>
    <p>
      <a href="https://www.ocf.berkeley.edu" class="no-underline">
        <img
          src="https://www.ocf.berkeley.edu/hosting-logos/ocf-hosted-penguin.svg"
          alt="Hosted by the OCF"
          style="border: 0"
      /></a>
      <span>
        Copyright &copy; 2017-2024
        <a href="https://www.ocf.berkeley.edu"> Open Computing Facility </a>
        and
        <a href="https://xcf.berkeley.edu"> eXperimental Computing Facility </a>
      </span>
    </p>
    <p>
      <span>
        This website and its course materials are licensed under the terms of the
        <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">
          CC BY-NC-SA 4.0
        </a>
        License.
        <a href="https://github.com/0xcf/decal-web/"> Source Code </a>
        available on GitHub
      </span>
    </p>
  </div>
  <!-- /.col-lg-12 -->
</footer>

      </div>
    </div>
  </div>

  <script>
    function setCookie(cname, cvalue, exdays) {
      const d = new Date();
      d.setTime(d.getTime() + (exdays*24*60*60*1000));
      let expires = "expires="+ d.toUTCString();
      document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
    }

    function getCookie(cname) {
      let name = cname + "=";
      let decodedCookie = decodeURIComponent(document.cookie);
      let ca = decodedCookie.split(';');
      for(let i = 0; i <ca.length; i++) {
        let c = ca[i];
        while (c.charAt(0) == ' ') {
          c = c.substring(1);
        }
        if (c.indexOf(name) == 0) {
          return c.substring(name.length, c.length);
        }
      }
      return "";
    }

    document.getElementById("loading").style["backgroundColor"] = getCookie("dark-mode") == 1 ? "#27262b" : "#ffffff" // Set the opaque layer to the prefered color

    window.addEventListener('load', (event) => {
      document.getElementById("loading").style = ""; // Remove the opaque layer when the page loads
    });


    let dark = !(window.matchMedia && 
    window.matchMedia('(prefers-color-scheme: dark)').matches); // Flip dark so we can run one toggle on load
    
    let preference = getCookie("dark-mode");

    if(preference == "1") {
      dark = false;
    } else if(preference == "0") {
      dark = true;
    }

    let toggleDark = () => { 
      jtd.setTheme(dark ? 'light' : 'dark'); 

      // Change input text placeholder text color

      const PLACEHOLDER_TEXT_COLOR = "#959396";

      if(!dark) {
        let placeholderStyleElem = document.head.appendChild(document.createElement("style"));
        placeholderStyleElem.id = "placeholderTextStyle"
        placeholderStyleElem.innerHTML = "::placeholder { color: " + PLACEHOLDER_TEXT_COLOR + "; opacity: 1 }\n"; // Firefox requires opacity
        placeholderStyleElem.innerHTML += ":-ms-input-placeholder { color: " + PLACEHOLDER_TEXT_COLOR + "; }\n"; // IE 10+
        placeholderStyleElem.innerHTML += "::-ms-input-placeholder { color: " + PLACEHOLDER_TEXT_COLOR + "; }\n"; // Edge
      } else {
        let placeholderStyleElem = document.getElementById("placeholderTextStyle");
        if(placeholderStyleElem) placeholderStyleElem.remove();
      }

      setCookie("dark-mode", dark ? "0" : "1", 3652); 
      dark = !dark;
    }
    toggleDark();
  </script>
</body>
</html>

